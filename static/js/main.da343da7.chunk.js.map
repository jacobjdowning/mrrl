{"version":3,"sources":["components/Item.module.scss","components/WantedItems.module.scss","components/Suggestions.module.scss","data/models.ts","data/item.ts","data/vendor.ts","data/functions.ts","components/Item.tsx","components/WantedItems.tsx","utils.ts","components/Suggestions.tsx","components/Result.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","item","name","image","item--1","item--2","item--3","item--4","input","suggestions__filter","results","selected","Rarity","CostType","KnownItemIds","items","itemId","UnidentifiedMass","rarity","Normal","cost","type","Gold","quantity","JustRegularButter","Uncommon","Items","SweetSeaVegetable","BagOfWhoKnowsWhat","FlatulentFish","GhostFood","Rare","CuriousMurlocHorn","BeckonersRosettaStone","Epic","secret","SmellyPileOfGloop","ParticularlyDenseRock","JarOfFishFaces","DirtyMurlocSock","HealthyMurlocLunch","CultistPinkyFinger","SlimyNagaEyeball","ExtraSlimySnail","DisintegratingSandSculpture","SeaGiantFootDust","OverwhelminglyAlluringIdol","PulsatingBloodStone","UnusuallyWiseHermitCrab","mrrl","CrimsonTidestallion","HungryHeraldsTentacleTaco","CuriouslyWarmKelpBundle","GrimyManapearlBracelet","PilferedArmorCrate","UnspeakablePearlIdol","FaintlyHummingSeaStones","WaterloggedToolbox","hurlgrl","inventory","flrgrrl","grrmrlg","mrrglrlr","murloco","instruction","url","vendors","itemsById","reduce","map","vendorByItemId","result","i","length","vendor","j","calculateItemIdToVendorMap","getItem","getVendorOfItem","mergeMaterials","toMergeInto","toMergeFrom","gold","forEach","foundItem","find","push","calculateRequiredMats","wantedItems","combinedMats","getCost","innerItem","getRarityClassName","key","styles","getImageUrl","Item","_ref","onClick","react_default","a","createElement","className","concat","src","alt","offeredItems","filter","sort","b","localeCompare","WantedItems","onQuantityChange","includeSecretShop","onWantChange","event","target","value","getValue","useCallback","wantedItem","wi","toString","style","onChange","components_Item","findRoute","materials","JSON","parse","stringify","unidentifiedMass","Object","toConsumableArray","buyItem","existingQuantity","costItem","existingMatQuantiy","Error","stepCount","lastVendor","undefined","indexToBuy","findIndex","hasCostRequirements","nextToBuy","nextToBuyItem","splice","route","hasDirtySocks","step","other","ci","addCleanSockStep","nextStep","mergeSteps","acc","val","quantityInventory","isInInventory","Suggestions","onItemSelected","selectedItems","inv","shiftKey","Result","requiredMats","includeVendorPictures","index","href","App","_useState","useState","_useState2","slicedToArray","state","setState","calculateNewState","prevState","objectSpread","components_Suggestions","shiftDown","newSelectedItems","selection","document","getSelection","removeAllRanges","defineProperty","selectedItemId","existingWantedItem","components_WantedItems","newWantedItems","checked","src_components_Result","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.da343da7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Item_item__sRdAE\",\"name\":\"Item_name__38J3o\",\"image\":\"Item_image__1MxZC\",\"item--1\":\"Item_item--1__3YPFH\",\"item--2\":\"Item_item--2__3AjDO\",\"item--3\":\"Item_item--3__1rT9K\",\"item--4\":\"Item_item--4__1wUu2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"WantedItems_item__K_9da\",\"input\":\"WantedItems_input__3DDax\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"suggestions__filter\":\"Suggestions_suggestions__filter__1kmRU\",\"results\":\"Suggestions_results__1-aov\",\"selected\":\"Suggestions_selected__19aAF\"};","export enum Rarity {\r\n  Normal = 1,\r\n  Uncommon = 2,\r\n  Rare = 3,\r\n  Epic = 4\r\n}\r\n\r\nexport enum CostType {\r\n  Items,\r\n  Gold\r\n}\r\n\r\nexport interface GoldCost {\r\n  type: CostType.Gold;\r\n  quantity: number;\r\n}\r\n\r\nexport interface ItemsCost {\r\n  type: CostType.Items;\r\n  items: {\r\n    quantity: number;\r\n    itemId: number;\r\n  }[];\r\n}\r\n\r\nexport interface Item {\r\n  itemId: number;\r\n  name: string;\r\n  rarity: Rarity;\r\n  cost: GoldCost | ItemsCost;\r\n  mrrl?: boolean;\r\n  secret?: boolean;\r\n}\r\n\r\nexport interface Vendor {\r\n  name: string;\r\n  instruction?: string;\r\n  url?: string;\r\n  inventory: number[];\r\n}\r\n\r\nexport interface WantedItem {\r\n  itemId: number;\r\n  quantity: number;\r\n}\r\nexport interface Materials {\r\n  items: { itemId: number; quantity: number }[];\r\n  gold: number;\r\n}\r\n","import { Item, Rarity, CostType } from \"./models\";\r\n\r\nexport enum KnownItemIds {\r\n  // Grrmlrg\r\n  FlatulentFish = 167906,\r\n  CuriousMurlocHorn = 167905,\r\n  ExtraSlimySnail = 167907,\r\n  SeaGiantFootDust = 167908,\r\n  OverwhelminglyAlluringIdol = 169781,\r\n\r\n  // Hurlgrl\r\n  HealthyMurlocLunch = 167913,\r\n  JarOfFishFaces = 167914,\r\n  SweetSeaVegetable = 167915,\r\n  DirtyMurlocSock = 167916,\r\n  CultistPinkyFinger = 169783,\r\n\r\n  // Flrgrrl\r\n  GhostFood = 167909,\r\n  BagOfWhoKnowsWhat = 167910,\r\n  JustRegularButter = 167911,\r\n  UnidentifiedMass = 167912,\r\n  BeckonersRosettaStone = 169782,\r\n\r\n  // Mrrglrlr\r\n  SlimyNagaEyeball = 167896,\r\n  ParticularlyDenseRock = 167902,\r\n  DisintegratingSandSculpture = 167903,\r\n  SmellyPileOfGloop = 167904,\r\n  PulsatingBloodStone = 169780,\r\n\r\n  // Mrrl\r\n  CuriouslyWarmKelpBundle = 168092,\r\n  GrimyManapearlBracelet = 168093,\r\n  PilferedArmorCrate = 168097,\r\n  UnusuallyWiseHermitCrab = 168053,\r\n  CrimsonTidestallion = 169202,\r\n  UnspeakablePearlIdol = 170158,\r\n  FaintlyHummingSeaStones = 168094,\r\n  WaterloggedToolbox = 168096,\r\n\r\n  // Murloco\r\n  HungryHeraldsTentacleTaco = 170100\r\n}\r\n\r\nlet items: Item[] = [\r\n  {\r\n    name: \"Unindentified Mass\",\r\n    itemId: KnownItemIds.UnidentifiedMass,\r\n    rarity: Rarity.Normal,\r\n    cost: { type: CostType.Gold, quantity: 1 }\r\n  },\r\n  {\r\n    name: \"Just Regular Butter\",\r\n    itemId: KnownItemIds.JustRegularButter,\r\n    rarity: Rarity.Uncommon,\r\n    cost: {\r\n      type: CostType.Items,\r\n      items: [{ itemId: KnownItemIds.SweetSeaVegetable, quantity: 4 }]\r\n    }\r\n  },\r\n  {\r\n    name: \"Bag of Who-Knows-What\",\r\n    itemId: KnownItemIds.BagOfWhoKnowsWhat,\r\n    rarity: Rarity.Uncommon,\r\n    cost: {\r\n      type: CostType.Items,\r\n      items: [{ itemId: KnownItemIds.FlatulentFish, quantity: 2 }]\r\n    }\r\n  },\r\n  {\r\n    name: \"Ghost Food\",\r\n    itemId: KnownItemIds.GhostFood,\r\n    rarity: Rarity.Rare,\r\n    cost: {\r\n      type: CostType.Items,\r\n      items: [{ itemId: KnownItemIds.CuriousMurlocHorn, quantity: 6 }]\r\n    }\r\n  },\r\n  {\r\n    name: \"Beckoner's Rosetta Stone\",\r\n    itemId: KnownItemIds.BeckonersRosettaStone,\r\n    rarity: Rarity.Epic,\r\n    secret: true,\r\n    cost: {\r\n      type: CostType.Items,\r\n      items: [\r\n        { itemId: KnownItemIds.SmellyPileOfGloop, quantity: 2 },\r\n        { itemId: KnownItemIds.ParticularlyDenseRock, quantity: 9 }\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    name: \"Sweet Sea Vegetable\",\r\n    itemId: KnownItemIds.SweetSeaVegetable,\r\n    rarity: Rarity.Normal,\r\n    cost: { type: CostType.Gold, quantity: 1 }\r\n  },\r\n  {\r\n    name: \"Jar of Fish Faces\",\r\n    itemId: KnownItemIds.JarOfFishFaces,\r\n    rarity: Rarity.Uncommon,\r\n    cost: {\r\n      type: CostType.Items,\r\n      items: [{ itemId: KnownItemIds.FlatulentFish, quantity: 5 }]\r\n    }\r\n  },\r\n  {\r\n    name: \"Dirty Murloc Sock\",\r\n    itemId: KnownItemIds.DirtyMurlocSock,\r\n    rarity: Rarity.Uncommon,\r\n    cost: {\r\n      type: CostType.Items,\r\n      items: [{ itemId: KnownItemIds.UnidentifiedMass, quantity: 6 }]\r\n    }\r\n  },\r\n  {\r\n    name: \"Healthy Murloc Lunch\",\r\n    itemId: KnownItemIds.HealthyMurlocLunch,\r\n    rarity: Rarity.Rare,\r\n    cost: {\r\n      type: CostType.Items,\r\n      items: [{ itemId: KnownItemIds.CuriousMurlocHorn, quantity: 5 }]\r\n    }\r\n  },\r\n  {\r\n    name: \"Cultist Pinky Finger\",\r\n    itemId: KnownItemIds.CultistPinkyFinger,\r\n    rarity: Rarity.Epic,\r\n    secret: true,\r\n    cost: {\r\n      type: CostType.Items,\r\n      items: [\r\n        { itemId: KnownItemIds.SmellyPileOfGloop, quantity: 5 },\r\n        { itemId: KnownItemIds.GhostFood, quantity: 7 }\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    name: \"Flatulent Fish\",\r\n    itemId: KnownItemIds.FlatulentFish,\r\n    rarity: Rarity.Normal,\r\n    cost: { type: CostType.Gold, quantity: 1 }\r\n  },\r\n  {\r\n    name: \"Curious Murloc Horn\",\r\n    itemId: KnownItemIds.CuriousMurlocHorn,\r\n    rarity: Rarity.Uncommon,\r\n    cost: {\r\n      type: CostType.Items,\r\n      items: [{ itemId: KnownItemIds.SlimyNagaEyeball, quantity: 3 }]\r\n    }\r\n  },\r\n  {\r\n    name: \"Extra-Slimy Snail\",\r\n    itemId: KnownItemIds.ExtraSlimySnail,\r\n    rarity: Rarity.Rare,\r\n    cost: {\r\n      type: CostType.Items,\r\n      items: [{ itemId: KnownItemIds.DisintegratingSandSculpture, quantity: 5 }]\r\n    }\r\n  },\r\n  {\r\n    name: \"Sea Giant Foot Dust\",\r\n    itemId: KnownItemIds.SeaGiantFootDust,\r\n    rarity: Rarity.Rare,\r\n    cost: {\r\n      type: CostType.Items,\r\n      items: [\r\n        {\r\n          itemId: KnownItemIds.DirtyMurlocSock, // It needs clean socks, but for simplicity let's use dirty..\r\n          quantity: 3\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    name: \"Overwhelmingly-Alluring Idol\",\r\n    itemId: KnownItemIds.OverwhelminglyAlluringIdol,\r\n    rarity: Rarity.Epic,\r\n    secret: true,\r\n    cost: {\r\n      type: CostType.Items,\r\n      items: [\r\n        { itemId: KnownItemIds.HealthyMurlocLunch, quantity: 8 },\r\n        { itemId: KnownItemIds.GhostFood, quantity: 4 }\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    name: \"Slimy Naga Eyeball\",\r\n    itemId: KnownItemIds.SlimyNagaEyeball,\r\n    rarity: Rarity.Normal,\r\n    cost: { type: CostType.Gold, quantity: 1 }\r\n  },\r\n\r\n  {\r\n    name: \"Disintegrating Sand Sculpture\",\r\n    itemId: KnownItemIds.DisintegratingSandSculpture,\r\n    rarity: Rarity.Uncommon,\r\n    cost: {\r\n      type: CostType.Items,\r\n      items: [\r\n        {\r\n          itemId: KnownItemIds.SweetSeaVegetable,\r\n          quantity: 4\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    name: \"Particularly Dense Rock\",\r\n    itemId: KnownItemIds.ParticularlyDenseRock,\r\n    rarity: Rarity.Rare,\r\n    cost: {\r\n      type: CostType.Items,\r\n      items: [\r\n        {\r\n          itemId: KnownItemIds.BagOfWhoKnowsWhat,\r\n          quantity: 3\r\n        },\r\n        {\r\n          itemId: KnownItemIds.JarOfFishFaces,\r\n          quantity: 3\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    name: \"Smelly Pile of Gloop\",\r\n    itemId: KnownItemIds.SmellyPileOfGloop,\r\n    rarity: Rarity.Rare,\r\n    cost: {\r\n      type: CostType.Items,\r\n      items: [{ itemId: KnownItemIds.JustRegularButter, quantity: 2 }]\r\n    }\r\n  },\r\n  {\r\n    name: \"Pulsating Blood Stone\",\r\n    itemId: KnownItemIds.PulsatingBloodStone,\r\n    rarity: Rarity.Epic,\r\n    secret: true,\r\n    cost: {\r\n      type: CostType.Items,\r\n      items: [\r\n        { itemId: KnownItemIds.SeaGiantFootDust, quantity: 8 },\r\n        { itemId: KnownItemIds.HealthyMurlocLunch, quantity: 7 }\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    name: \"Unusually Wise Hermit Crab\",\r\n    itemId: KnownItemIds.UnusuallyWiseHermitCrab,\r\n    rarity: Rarity.Epic,\r\n    mrrl: true,\r\n    cost: {\r\n      type: CostType.Items,\r\n      items: [\r\n        { itemId: KnownItemIds.GhostFood, quantity: 4 },\r\n        { itemId: KnownItemIds.HealthyMurlocLunch, quantity: 3 },\r\n        { itemId: KnownItemIds.SeaGiantFootDust, quantity: 3 }\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    name: \"Crimson Tidestallion\",\r\n    itemId: KnownItemIds.CrimsonTidestallion,\r\n    rarity: Rarity.Epic,\r\n    mrrl: true,\r\n    secret: true,\r\n    cost: {\r\n      type: CostType.Items,\r\n      items: [\r\n        { itemId: KnownItemIds.CultistPinkyFinger, quantity: 4 },\r\n        { itemId: KnownItemIds.PulsatingBloodStone, quantity: 2 },\r\n        { itemId: KnownItemIds.HungryHeraldsTentacleTaco, quantity: 1 }\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    name: \"Curiously Warm Kelp Bundle\",\r\n    itemId: KnownItemIds.CuriouslyWarmKelpBundle,\r\n    rarity: Rarity.Epic,\r\n    mrrl: true,\r\n    cost: {\r\n      type: CostType.Items,\r\n      items: [\r\n        { itemId: KnownItemIds.ParticularlyDenseRock, quantity: 2 },\r\n        { itemId: KnownItemIds.GhostFood, quantity: 4 },\r\n        { itemId: KnownItemIds.HealthyMurlocLunch, quantity: 5 }\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    name: \"Grimy Manapearl Bracelet\",\r\n    itemId: KnownItemIds.GrimyManapearlBracelet,\r\n    rarity: Rarity.Epic,\r\n    mrrl: true,\r\n    cost: {\r\n      type: CostType.Items,\r\n      items: [\r\n        { itemId: KnownItemIds.SmellyPileOfGloop, quantity: 3 },\r\n        { itemId: KnownItemIds.GhostFood, quantity: 1 },\r\n        { itemId: KnownItemIds.SeaGiantFootDust, quantity: 3 }\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    name: \"Pilfered Armor Crate\",\r\n    itemId: KnownItemIds.PilferedArmorCrate,\r\n    rarity: Rarity.Epic,\r\n    mrrl: true,\r\n    cost: {\r\n      type: CostType.Items,\r\n      items: [\r\n        { itemId: KnownItemIds.SeaGiantFootDust, quantity: 3 },\r\n        { itemId: KnownItemIds.SmellyPileOfGloop, quantity: 4 },\r\n        { itemId: KnownItemIds.ParticularlyDenseRock, quantity: 3 }\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    name: \"Hungry Herald's Tentacle Taco\",\r\n    itemId: KnownItemIds.HungryHeraldsTentacleTaco,\r\n    rarity: Rarity.Epic,\r\n    cost: {\r\n      type: CostType.Gold,\r\n      quantity: 666\r\n    }\r\n  },\r\n  {\r\n    name: \"Unspeakable Pearl Idol\",\r\n    itemId: KnownItemIds.UnspeakablePearlIdol,\r\n    rarity: Rarity.Epic,\r\n    mrrl: true,\r\n    secret: true,\r\n    cost: {\r\n      type: CostType.Items,\r\n      items: [\r\n        { itemId: KnownItemIds.OverwhelminglyAlluringIdol, quantity: 3 },\r\n        { itemId: KnownItemIds.CultistPinkyFinger, quantity: 4 },\r\n        { itemId: KnownItemIds.HungryHeraldsTentacleTaco, quantity: 1 }\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    name: \"Faintly Humming Sea Stones\",\r\n    itemId: KnownItemIds.FaintlyHummingSeaStones,\r\n    rarity: Rarity.Epic,\r\n    mrrl: true,\r\n    cost: {\r\n      type: CostType.Items,\r\n      items: [\r\n        { itemId: KnownItemIds.GhostFood, quantity: 5 },\r\n        { itemId: KnownItemIds.ParticularlyDenseRock, quantity: 1 },\r\n        { itemId: KnownItemIds.SeaGiantFootDust, quantity: 2 }\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    name: \"Waterlogged Toolbox\",\r\n    itemId: KnownItemIds.WaterloggedToolbox,\r\n    rarity: Rarity.Epic,\r\n    mrrl: true,\r\n    secret: true,\r\n    cost: {\r\n      type: CostType.Items,\r\n      items: [\r\n        { itemId: KnownItemIds.BeckonersRosettaStone, quantity: 1 },\r\n        { itemId: KnownItemIds.PulsatingBloodStone, quantity: 1 },\r\n        { itemId: KnownItemIds.OverwhelminglyAlluringIdol, quantity: 1 }\r\n      ]\r\n    }\r\n  }\r\n];\r\n\r\nexport default items;\r\n","import { KnownItemIds } from \"./item\";\r\n\r\nexport interface Vendor {\r\n  name: string;\r\n  instruction?: string;\r\n  url?: string;\r\n  inventory: number[];\r\n}\r\n\r\nexport let hurlgrl: Vendor = {\r\n  name: \"Hurlgrl\",\r\n  inventory: [\r\n    KnownItemIds.SweetSeaVegetable,\r\n    KnownItemIds.JarOfFishFaces,\r\n    KnownItemIds.DirtyMurlocSock,\r\n    KnownItemIds.HealthyMurlocLunch,\r\n    KnownItemIds.CultistPinkyFinger\r\n  ]\r\n};\r\n\r\nexport let flrgrrl: Vendor = {\r\n  name: \"Flrgrrl\",\r\n  inventory: [\r\n    KnownItemIds.UnidentifiedMass,\r\n    KnownItemIds.JustRegularButter,\r\n    KnownItemIds.BagOfWhoKnowsWhat,\r\n    KnownItemIds.GhostFood,\r\n    KnownItemIds.BeckonersRosettaStone\r\n  ]\r\n};\r\n\r\nexport let grrmrlg: Vendor = {\r\n  name: \"Grrmrlg\",\r\n  inventory: [\r\n    KnownItemIds.FlatulentFish,\r\n    KnownItemIds.CuriousMurlocHorn,\r\n    KnownItemIds.ExtraSlimySnail,\r\n    KnownItemIds.SeaGiantFootDust,\r\n    KnownItemIds.OverwhelminglyAlluringIdol\r\n  ]\r\n};\r\n\r\nexport let mrrglrlr: Vendor = {\r\n  name: \"Mrrglrlr\",\r\n  inventory: [\r\n    KnownItemIds.SlimyNagaEyeball,\r\n    KnownItemIds.DisintegratingSandSculpture,\r\n    KnownItemIds.ParticularlyDenseRock,\r\n    KnownItemIds.SmellyPileOfGloop,\r\n    KnownItemIds.PulsatingBloodStone\r\n  ]\r\n};\r\n\r\nexport let mrrl: Vendor = {\r\n  name: \"Mrrl\",\r\n  inventory: [\r\n    KnownItemIds.FaintlyHummingSeaStones,\r\n    KnownItemIds.WaterloggedToolbox,\r\n    KnownItemIds.UnusuallyWiseHermitCrab,\r\n    KnownItemIds.UnspeakablePearlIdol,\r\n    KnownItemIds.CrimsonTidestallion,\r\n    KnownItemIds.CuriouslyWarmKelpBundle,\r\n    KnownItemIds.GrimyManapearlBracelet,\r\n    KnownItemIds.PilferedArmorCrate\r\n  ]\r\n};\r\n\r\nlet murloco: Vendor = {\r\n  name: \"Murloco\",\r\n  instruction:\r\n    \"Found at 46.22 32.57 in Nazjatar. Kill the 2 Naga guards to release Murloco. He is not always there. Click on the map for more info.\",\r\n  url:\r\n    \"https://www.wowhead.com/guides/mrrls-trading-game-obtaining-crimson-tidestallion#acquiring-the-hungry-heralds-tentacle-taco\",\r\n  inventory: [KnownItemIds.HungryHeraldsTentacleTaco]\r\n};\r\n\r\nlet vendors: Vendor[] = [hurlgrl, grrmrlg, mrrglrlr, flrgrrl, mrrl, murloco];\r\n\r\nexport default vendors;\r\n","import items from \"./item\";\r\nimport {\r\n  Rarity,\r\n  Vendor,\r\n  Item,\r\n  CostType,\r\n  Materials,\r\n  WantedItem\r\n} from \"./models\";\r\nimport vendors from \"./vendor\";\r\n\r\nlet itemsById = items.reduce((map: any, item) => {\r\n  map[item.itemId] = item;\r\n  return map;\r\n}, {});\r\n\r\nfunction calculateItemIdToVendorMap(vendors: Vendor[]) {\r\n  let result: { [itemId: number]: Vendor } = {};\r\n\r\n  for (let i = 0; i < vendors.length; i++) {\r\n    let vendor = vendors[i];\r\n    for (let j = 0; j < vendor.inventory.length; j++) {\r\n      let itemId = vendor.inventory[j];\r\n      result[itemId] = vendor;\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport let vendorByItemId = calculateItemIdToVendorMap(vendors);\r\n\r\nexport function getItem(itemId: number): Item {\r\n  return itemsById[itemId];\r\n}\r\n\r\nexport function getMaterialsInput(): Item[] {\r\n  return items\r\n    .filter(\r\n      i => !i.mrrl && (i.rarity === Rarity.Rare || i.rarity === Rarity.Epic)\r\n    )\r\n    .sort((a, b) => {\r\n      if (a.rarity === b.rarity) {\r\n        return a.name.localeCompare(b.name);\r\n      }\r\n\r\n      // Inverted to get Epic as first (descending).\r\n      return b.rarity - a.rarity;\r\n    });\r\n}\r\n\r\nexport function getVendorItems(vendor: Vendor): Item[] {\r\n  return vendor.inventory.map(itemId => itemsById[itemId]);\r\n}\r\n\r\nexport function getVendorOfItem(itemId: number): Vendor {\r\n  return vendorByItemId[itemId];\r\n}\r\n\r\nexport function mergeMaterials(toMergeInto: Materials, toMergeFrom: Materials) {\r\n  toMergeInto.gold = toMergeInto.gold + toMergeFrom.gold;\r\n\r\n  toMergeFrom.items.forEach(item => {\r\n    let foundItem = toMergeInto.items.find(i => i.itemId === item.itemId);\r\n    if (foundItem) {\r\n      foundItem.quantity = foundItem.quantity + item.quantity;\r\n    } else {\r\n      toMergeInto.items.push(item);\r\n    }\r\n  });\r\n}\r\n\r\nexport function calculateRequiredMats(wantedItems: WantedItem[]): Materials {\r\n  let combinedMats: Materials = { gold: 0, items: [] };\r\n\r\n  wantedItems.forEach(item => {\r\n    mergeMaterials(combinedMats, getCost(item.itemId, item.quantity));\r\n  });\r\n\r\n  return combinedMats;\r\n}\r\n\r\nexport function getCost(itemId: number, quantity: number): Materials {\r\n  // Add ourselves.\r\n  let result = { gold: 0, items: [{ itemId, quantity }] };\r\n\r\n  const item = getItem(itemId);\r\n\r\n  if (item.cost.type === CostType.Gold) {\r\n    mergeMaterials(result, {\r\n      gold: quantity * item.cost.quantity,\r\n      items: []\r\n    });\r\n  } else if (item.cost.type === CostType.Items) {\r\n    for (let i = 0; i < item.cost.items.length; i++) {\r\n      const innerItem = item.cost.items[i];\r\n      const cost = getCost(innerItem.itemId, quantity * innerItem.quantity);\r\n\r\n      mergeMaterials(result, cost);\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./Item.module.scss\";\r\nimport { getItem } from \"../data\";\r\n\r\ninterface Props {\r\n  itemId: number;\r\n  onClick?: (event: any) => void;\r\n}\r\n\r\nconst Item: React.FC<Props> = ({ itemId, onClick }) => {\r\n  let item = getItem(itemId);\r\n\r\n  return (\r\n    <div\r\n      className={`${styles.item} ${getRarityClassName(item)}`}\r\n      onClick={onClick}\r\n    >\r\n      <img className={styles.image} src={getImageUrl(itemId)} alt={item.name} />\r\n      <span className={styles.name}>{item.name}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst getRarityClassName = item => {\r\n  let key = \"item--\" + item.rarity;\r\n\r\n  return styles[key];\r\n};\r\n\r\nconst getImageUrl = itemId => {\r\n  return process.env.PUBLIC_URL + \"/items/\" + itemId + \".jpg\";\r\n};\r\n\r\nexport default Item;\r\n","import React, { ChangeEvent, useCallback } from \"react\";\r\nimport style from \"./WantedItems.module.scss\";\r\nimport Item from \"./Item\";\r\nimport { getMaterialsInput, WantedItem } from \"../data\";\r\n\r\nlet offeredItems = getMaterialsInput();\r\n\r\ninterface Props {\r\n  wantedItems: WantedItem[];\r\n  includeSecretShop: boolean;\r\n  onQuantityChange: (itemId: number, quantity: number) => void;\r\n}\r\n\r\nconst WantedItems: React.FC<Props> = ({\r\n  onQuantityChange,\r\n  wantedItems,\r\n  includeSecretShop\r\n}) => {\r\n  const onWantChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const target = event.target;\r\n    const itemId = +target.name;\r\n    const quantity = +target.value;\r\n\r\n    onQuantityChange(itemId, quantity);\r\n  };\r\n\r\n  const getValue = useCallback(\r\n    (itemId: number) => {\r\n      let wantedItem = wantedItems.find(wi => wi.itemId === itemId);\r\n      if (wantedItem == null || wantedItem.quantity == null) {\r\n        return \"\";\r\n      }\r\n\r\n      return wantedItem.quantity.toString();\r\n    },\r\n    [wantedItems]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h2>Materials</h2>\r\n      <div>\r\n        {offeredItems\r\n          .filter(item => !item.secret || includeSecretShop)\r\n          .map(item => (\r\n            <div key={item.itemId} className={`col-6 ${style.item}`}>\r\n              <input\r\n                type=\"number\"\r\n                className={style.input}\r\n                name={item.itemId.toString()}\r\n                onChange={onWantChange}\r\n                value={getValue(item.itemId)}\r\n              />\r\n              <Item itemId={item.itemId} />\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WantedItems;\r\n","import {\r\n  KnownItemIds,\r\n  CostType,\r\n  Item,\r\n  Vendor,\r\n  getVendorOfItem,\r\n  getItem\r\n} from \"./data\";\r\nimport { flrgrrl } from \"./data/vendor\";\r\n\r\ninterface Materials {\r\n  items: { itemId: number; quantity: number }[];\r\n  gold: number;\r\n}\r\n\r\ninterface Inventory {\r\n  [itemId: number]: number;\r\n}\r\n\r\nexport interface RouteStep {\r\n  vendor: Vendor;\r\n  items: { itemId: number; quantity: number }[];\r\n  quantity?: number;\r\n  other?: string;\r\n}\r\n\r\nexport function findRoute(materials: Materials): RouteStep[] {\r\n  if (materials.items.length === 0) {\r\n    return [];\r\n  }\r\n\r\n  let result: RouteStep[] = [];\r\n\r\n  materials = JSON.parse(JSON.stringify(materials));\r\n  let inventory: Inventory = {};\r\n  // Start with Unidentified Mass for now. Simple way to make sure we have dirty socks to clean when go see the Murloc in the water.\r\n  const unidentifiedMass = materials.items.find(\r\n    item => item.itemId === KnownItemIds.UnidentifiedMass\r\n  );\r\n\r\n  if (unidentifiedMass != null) {\r\n    materials.items = [\r\n      unidentifiedMass,\r\n      ...materials.items.filter(i => i !== unidentifiedMass)\r\n    ];\r\n  }\r\n\r\n  const buyItem = (item: Item, quantity: number) => {\r\n    let existingQuantity = inventory[item.itemId];\r\n    if (existingQuantity != null) {\r\n      inventory[item.itemId] = existingQuantity + quantity;\r\n    } else {\r\n      inventory[item.itemId] = quantity;\r\n    }\r\n\r\n    // Remove mats from inventory\r\n    if (item.cost.type === CostType.Items) {\r\n      for (let i = 0; i < item.cost.items.length; i++) {\r\n        let costItem = item.cost.items[i];\r\n        let existingMatQuantiy = inventory[costItem.itemId];\r\n        if (existingMatQuantiy != null) {\r\n          if (existingMatQuantiy < quantity * costItem.quantity) {\r\n            throw new Error(\"Not enough mats!\");\r\n          } else {\r\n            inventory[costItem.itemId] =\r\n              existingMatQuantiy - quantity * costItem.quantity;\r\n          }\r\n        } else {\r\n          throw new Error(\"Buying something we don't have the math for!\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  let stepCount = 0;\r\n  let lastVendor: Vendor | undefined = undefined;\r\n  while (materials.items.length > 0) {\r\n    let indexToBuy = materials.items.findIndex(\r\n      item =>\r\n        getVendorOfItem(item.itemId) === lastVendor &&\r\n        hasCostRequirements(inventory, item.itemId, item.quantity)\r\n    );\r\n    if (indexToBuy < 0) {\r\n      indexToBuy = materials.items.findIndex(item =>\r\n        hasCostRequirements(inventory, item.itemId, item.quantity)\r\n      );\r\n      if (indexToBuy < 0) {\r\n        throw new Error(\"Couldn't find a next item to buy??.\");\r\n      }\r\n    }\r\n\r\n    let nextToBuy = materials.items[indexToBuy];\r\n    let nextToBuyItem = getItem(nextToBuy.itemId);\r\n\r\n    let vendor = getVendorOfItem(nextToBuy.itemId);\r\n\r\n    //console.log(`Want to buy ${nextToBuy.quantity}x${nextToBuy.itemId}`);\r\n    //console.log(`It is sold by: ${vendor.name}`);\r\n\r\n    buyItem(nextToBuyItem, nextToBuy.quantity);\r\n\r\n    result.push({\r\n      vendor: vendor,\r\n      items: [{ itemId: nextToBuy.itemId, quantity: nextToBuy.quantity }]\r\n    });\r\n\r\n    lastVendor = vendor;\r\n\r\n    // if (nextToBuy.itemId === KnownItemIds.DirtyMurlocSock) {\r\n    //   result.push({\r\n    //     other: \"Clean the dirty socks.\"\r\n    //   });\r\n    // }\r\n\r\n    materials.items.splice(indexToBuy, 1);\r\n\r\n    stepCount++;\r\n\r\n    if (stepCount > 50) {\r\n      throw new Error(\"Couldn't find a route.\");\r\n    }\r\n  }\r\n\r\n  addCleanSockStep(result);\r\n  mergeSteps(result);\r\n  return result;\r\n}\r\n\r\nfunction mergeSteps(route: RouteStep[]) {\r\n  if (route.length <= 1) {\r\n    return;\r\n  }\r\n\r\n  for (let i = 0; i < route.length - 1; i++) {\r\n    let step = route[i];\r\n    let nextStep = route[i + 1];\r\n\r\n    let stepCount = 0;\r\n\r\n    while (true) {\r\n      if (step.vendor === nextStep.vendor) {\r\n        step.items = step.items.concat(nextStep.items);\r\n        if (nextStep.other != null) {\r\n          step.other = nextStep.other;\r\n        }\r\n\r\n        route.splice(i + 1, 1);\r\n\r\n        if (i + 1 < route.length) {\r\n          nextStep = route[i + 1];\r\n        } else {\r\n          break;\r\n        }\r\n      } else {\r\n        break;\r\n      }\r\n\r\n      stepCount++;\r\n\r\n      if (stepCount > 50) {\r\n        throw new Error(\"Could not merge steps\");\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction addCleanSockStep(route: RouteStep[]) {\r\n  let hasDirtySocks = false;\r\n\r\n  for (let i = 0; i < route.length; i++) {\r\n    let step = route[i];\r\n\r\n    if (step.items != null) {\r\n      if (step.items.find(i => i.itemId === KnownItemIds.DirtyMurlocSock)) {\r\n        hasDirtySocks = true;\r\n      }\r\n\r\n      // If we have dirt socks and at Flrgrrl, clean them.\r\n      if (hasDirtySocks && step.vendor.name === \"Flrgrrl\") {\r\n        route.splice(i, 0, {\r\n          vendor: flrgrrl,\r\n          items: [],\r\n          other: \"Clean the dirty socks.\"\r\n        });\r\n        hasDirtySocks = false;\r\n        break;\r\n      }\r\n\r\n      // If we have dirty socks and we need clean socks to buy the next item, must clean them.\r\n      if (\r\n        hasDirtySocks &&\r\n        step.items.find(i => {\r\n          let item = getItem(i.itemId);\r\n          if (item.cost.type === CostType.Items) {\r\n            return (\r\n              item.cost.items.findIndex(\r\n                ci => ci.itemId === KnownItemIds.DirtyMurlocSock\r\n              ) >= 0\r\n            );\r\n          }\r\n\r\n          return false;\r\n        })\r\n      ) {\r\n        route.splice(i, 0, {\r\n          vendor: flrgrrl,\r\n          items: [],\r\n          other: \"Clean the dirty socks.\"\r\n        });\r\n\r\n        hasDirtySocks = false;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction hasCostRequirements(\r\n  inventory: Inventory,\r\n  itemId: number,\r\n  quantity: number\r\n) {\r\n  let item = getItem(itemId);\r\n\r\n  if (item.cost.type === CostType.Gold) {\r\n    return true; // Always have the gold!\r\n  } else if (item.cost.type === CostType.Items) {\r\n    // Can probably change this to something that has early return but whatever\r\n    return item.cost.items.reduce((acc, val) => {\r\n      let quantityInventory = inventory[val.itemId];\r\n      let isInInventory =\r\n        quantityInventory != null &&\r\n        quantityInventory >= quantity * val.quantity;\r\n\r\n      return acc && isInInventory;\r\n    }, true);\r\n  }\r\n\r\n  return false;\r\n}\r\n","import React from \"react\";\r\nimport style from \"./Suggestions.module.scss\";\r\nimport { mrrl } from \"../data/vendor\";\r\nimport Item from \"./Item\";\r\nimport { getVendorItems } from \"../data\";\r\n\r\ninterface Props {\r\n  onItemSelected: (itemId: number, shiftPressed: boolean) => void;\r\n  includeSecretShop: boolean;\r\n  selectedItems: { [itemId: number]: any };\r\n}\r\n\r\nconst Suggestions: React.FC<Props> = ({\r\n  includeSecretShop,\r\n  onItemSelected,\r\n  selectedItems\r\n}) => {\r\n  return (\r\n    <div>\r\n      <h2>Items</h2>\r\n\r\n      <div className={style.results}>\r\n        {getVendorItems(mrrl)\r\n          .filter(inv => !inv.secret || includeSecretShop)\r\n          .map(inv => (\r\n            <div\r\n              key={inv.itemId}\r\n              className={\r\n                \"col-4 \" + (selectedItems[inv.itemId] ? style.selected : \"\")\r\n              }\r\n            >\r\n              <Item\r\n                itemId={inv.itemId}\r\n                onClick={event => onItemSelected(inv.itemId, !!event.shiftKey)}\r\n              />\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Suggestions;\r\n","import React from \"react\";\r\nimport { RouteStep } from \"../utils\";\r\n\r\nimport \"./Result.scss\";\r\nimport Item from \"./Item\";\r\nimport { Materials } from \"../data\";\r\n\r\ninterface Props {\r\n  route: RouteStep[];\r\n  requiredMats: Materials;\r\n  includeVendorPictures: boolean;\r\n}\r\n\r\nconst Result: React.FC<Props> = ({\r\n  route,\r\n  requiredMats,\r\n  includeVendorPictures\r\n}) => {\r\n  if (route.length == 0) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"results__container\">\r\n      <h2>Results</h2>\r\n      Cost: {requiredMats.gold} Gold\r\n      <h3>Steps</h3>\r\n      <div className=\"results__route\">\r\n        <table className=\"results__steps\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Vendor</th>\r\n              <th>Items/Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {route.map((step, index) => (\r\n              <tr key={index}>\r\n                <td>{index + 1}</td>\r\n                <td className=\"results__vendor\">\r\n                  <div>{step.vendor.name}</div>\r\n                  {includeVendorPictures && (\r\n                    <div>\r\n                      <a href={step.vendor.url}>\r\n                        <img\r\n                          src={\r\n                            process.env.PUBLIC_URL +\r\n                            \"/images/npc/\" +\r\n                            step.vendor.name +\r\n                            \".jpg\"\r\n                          }\r\n                          alt={step.vendor.name}\r\n                        />\r\n                      </a>\r\n                    </div>\r\n                  )}\r\n                  <div>{step.vendor.instruction}</div>\r\n                </td>\r\n                <td>\r\n                  {step.items &&\r\n                    step.items.map((item, index) => (\r\n                      <div key={index} className=\"results__item\">\r\n                        <span className=\"col-3 results__quantity\">\r\n                          {item.quantity}\r\n                        </span>\r\n                        <div className=\"col-10\">\r\n                          <Item itemId={item.itemId} />\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  <div className=\"results__other\">{step.other}</div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import React, { useState, ChangeEvent } from \"react\";\nimport \"./App.scss\";\nimport \"./simple-grid.css\";\n\nimport WantedItems from \"./components/WantedItems\";\nimport { findRoute, RouteStep } from \"./utils\";\nimport Suggestions from \"./components/Suggestions\";\nimport Result from \"./components/Result\";\nimport {\n  CostType,\n  getItem,\n  calculateRequiredMats,\n  WantedItem,\n  Materials\n} from \"./data\";\n\ninterface State {\n  wantedItems: WantedItem[];\n  route: RouteStep[];\n  requiredMats: Materials;\n  includeSecretShop: boolean;\n  includeVendorPictures: boolean;\n  selectedItems: { [itemId: number]: any };\n}\n\nconst App: React.FC = () => {\n  const [state, setState] = useState<State>({\n    wantedItems: [],\n    route: [],\n    requiredMats: { items: [], gold: 0 },\n    includeSecretShop: true,\n    includeVendorPictures: true,\n    selectedItems: {}\n  });\n\n  const onQuantityChange = (itemId: number, quantity: number) => {\n    const newWantedItems = state.wantedItems.filter(wi => wi.itemId !== itemId);\n    if (quantity > 0) {\n      newWantedItems.push({ itemId, quantity });\n    }\n\n    calculateNewState(newWantedItems);\n  };\n\n  const calculateNewState = (wantedItems: WantedItem[]): void => {\n    let requiredMats = calculateRequiredMats(wantedItems);\n    let route = findRoute(requiredMats);\n\n    setState(prevState => ({ ...prevState, wantedItems, route, requiredMats }));\n  };\n\n  const onItemSelected = (itemId: number, shiftDown: boolean) => {\n    let newSelectedItems = { ...state.selectedItems };\n    if (shiftDown) {\n      newSelectedItems[itemId] = true;\n      // Clear text selection.\n      let selection = document.getSelection();\n      if (selection != null) {\n        selection.removeAllRanges();\n      }\n    } else {\n      newSelectedItems = { [itemId]: true };\n    }\n\n    let wantedItems: WantedItem[] = [];\n\n    for (let selectedItemId in newSelectedItems) {\n      let item = getItem(+selectedItemId);\n\n      if (item.cost.type === CostType.Items) {\n        item.cost.items.forEach(({ itemId, quantity }) => {\n          wantedItems.push({ itemId, quantity: quantity });\n        });\n      }\n    }\n\n    // Merge identical wanted items\n\n    wantedItems = wantedItems.reduce((acc: any, val) => {\n      let existingWantedItem = acc.find((wi: any) => wi.itemId === val.itemId);\n\n      if (existingWantedItem != null) {\n        existingWantedItem.quantity =\n          existingWantedItem.quantity + val.quantity;\n      } else {\n        acc.push({ itemId: val.itemId, quantity: val.quantity });\n      }\n\n      return acc;\n    }, []);\n\n    setState(prevState => ({\n      ...prevState,\n      selectedItems: newSelectedItems\n    }));\n\n    calculateNewState(wantedItems);\n  };\n\n  const onSecretShopChangeChecked = (event: ChangeEvent<HTMLInputElement>) => {\n    const checked = event.target.checked;\n\n    setState(prevState => ({\n      ...prevState,\n      includeSecretShop: checked\n    }));\n  };\n\n  const onIncludeVendorPicturesChange = (\n    event: ChangeEvent<HTMLInputElement>\n  ) => {\n    const checked = event.target.checked;\n\n    setState(prevState => ({\n      ...prevState,\n      includeVendorPictures: checked\n    }));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Mrrl! (beta)</h1>\n      <Suggestions\n        onItemSelected={onItemSelected}\n        includeSecretShop={state.includeSecretShop}\n        selectedItems={state.selectedItems}\n      />\n      <WantedItems\n        onQuantityChange={onQuantityChange}\n        wantedItems={state.wantedItems}\n        includeSecretShop={state.includeSecretShop}\n      />\n      <label>\n        <input\n          type=\"checkbox\"\n          checked={state.includeSecretShop}\n          onChange={onSecretShopChangeChecked}\n        />\n        Include secret shop (cloak required)\n      </label>\n      <br />\n      <label>\n        <input\n          type=\"checkbox\"\n          checked={state.includeVendorPictures}\n          onChange={onIncludeVendorPicturesChange}\n        />\n        Include vendor pictures\n      </label>\n      <Result\n        route={state.route}\n        requiredMats={state.requiredMats}\n        includeVendorPictures={state.includeVendorPictures}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}